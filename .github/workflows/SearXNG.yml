name: Convert uBlacklist.txt to dual CSS selectors (for uBo)

on:
  workflow_dispatch: {}
  push:
    paths:
      - 'uBlacklist.txt'

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Convert uBlacklist.txt → uBlacklist_converted-foruBo.txt
        run: |
          INPUT="uBlacklist.txt"
          OUTPUT="uBlacklist_converted-foruBo.txt"

          if [ ! -f "$INPUT" ]; then
            echo "❌ $INPUT が見つかりません"
            exit 1
          fi

          echo "🔧 $INPUT からドメイン抽出 → $OUTPUT にCSS形式で書き出し"

          python3 - <<'PYCODE'
import re
from pathlib import Path

INPUT = "uBlacklist.txt"
OUTPUT = "uBlacklist_converted-foruBo.txt"

TEMPLATE = (
    "neral.result-default.result:nth-of-type(n):has(a[href*='.{domain}/'])##"
    "article.category-general.result-default.result:nth-of-type(n):has(a[href*='.{domain}/'])"
)

def extract_domains(text: str):
    pattern1 = re.compile(r"://(?:\\*\\.)?([^/\\s*]+)")
    domains = pattern1.findall(text)
    pattern2 = re.compile(r"\\b([A-Za-z0-9][-A-Za-z0-9]{0,62}(?:\\.[A-Za-z0-9][-A-Za-z0-9]{0,62})+\\.[A-Za-z]{2,})\\b")
    domains += [m for m in pattern2.findall(text) if m not in domains]

    seen = set()
    out = []
    for d in domains:
        d = d.strip().lower().rstrip('.,;:\\\\')
        if d and d not in seen:
            seen.add(d)
            out.append(d)
    return out

text = Path(INPUT).read_text(encoding='utf-8')
domains = extract_domains(text)

with Path(OUTPUT).open('w', encoding='utf-8') as f:
    for dom in domains:
        f.write(TEMPLATE.format(domain=dom) + '\\n')

print(f"✅ {len(domains)} domains converted and saved to {OUTPUT}")
PYCODE

      - name: Commit and push result
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add uBlacklist_converted-foruBo.txt || true
          git commit -m "Auto-update: converted uBlacklist.txt to CSS selectors" || echo "No changes to commit"
          git push || echo "Push skipped (no permission or PR build)"
